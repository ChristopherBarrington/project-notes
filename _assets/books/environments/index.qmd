---
execute:
  keep-md: false

format:
  html:
    toc: false

params:
  renv: false
  conda: false

report:
  outputs summary:
    - Environment definition files

description: |
  A description of computational environments used throughout this project.

abstract: |
  Computational environments used to analyse the data in this project will be listed here. These environments were likely used in all chapters or analyses. Analysis-specific environments will be described in the relevant chapter(s).
---

<!--
quarto render environments/index.qmd \
--execute-param conda=false \
--execute-param renv=false 
-->

# Environments {.appendix}

```{r provide-yaml-engine}
#| cache: false
#| echo: false

# write a generic chunk
formatted_text_engine <- function(options, language='plain') {
	options |> purrr::pluck('code-fold', .default='false') -> code_fold
	options |> purrr::pluck('code-summary', .default='Code') -> code_summary
	chunk_def <- sprintf(fmt='```{.%s .cell-code code-fold="%s" code-summary="%s"}\n', language, code_fold, code_summary)
	options |> purrr::pluck('code') |> sprintf(fmt='%s\n') |> (\(x) c(chunk_def, x, '```\n'))()
}

# write a yaml chunk
yaml_engine <- function(options)
	formatted_text_engine(options=options, language='yaml')

# write a json chunk
json_engine <- function(options)
	formatted_text_engine(options=options, language='json')

# provide the above engines
knitr::knit_engines$set(yaml=yaml_engine, json=json_engine)
```

```{r include-conda}
#| child: children/conda.qmd
#| eval: !expr params$conda
```

```{r include-renv}
#| child: children/renv.qmd
#| eval: !expr params$renv
```
